{"version":3,"sources":["api/api.ts","api/posts.ts","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","components/UserSelect/UserSelect.tsx","App.tsx","index.tsx"],"names":["BASE_URL","getData","endPoint","fetch","then","response","ok","json","Promise","reject","PostsList","selectedUserId","selectedPostId","setSelectedPostId","areDetailsShown","postDetailsAreShown","useState","posts","setPosts","loadPosts","postsFromServer","loadUserPosts","userId","useEffect","className","map","post","body","type","onClick","current","id","NewCommentForm","postId","name","setName","email","setEmail","setBody","comment","onSubmit","event","preventDefault","method","headers","JSON","stringify","createComment","placeholder","value","onChange","target","PostDetails","details","setDetails","areCommentsShown","setAreCommentsShown","comments","setComments","loadDetails","getPostDetails","detailsFromServer","loadComments","getPostComments","commentsFromServer","length","commentId","UserSelect","setSelectedUserId","setDetailsAreShown","users","setUsers","loadUsers","usersFromServer","htmlFor","user","App","setUserId","setPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98299b66.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\nimport { CommentToPost } from '../types/CommentToPost';\n\nconst getData = (endPoint: string) => {\n  return fetch(`${BASE_URL}${endPoint}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject();\n      }\n\n      return response.json();\n    });\n};\n\nexport const getPosts = () => getData('/posts');\n\nexport const getUsers = () => getData('/users');\n\nexport const getUserPosts = (userId: number) => getData(`/posts?userId=${userId}`);\n\nexport const getPostDetails = (postId: number) => getData(`/posts/${postId}`);\n\nexport const getPostComments = (postId: number) => getData(`/comments?postId=${postId}`);\n\nexport const removeComment = (commentId: string) => {\n  return fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' });\n};\n\nexport const createComment = (comment: CommentToPost) => {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(comment),\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPosts, getUserPosts } from '../../api/posts';\nimport { Post } from '../../types/Post';\nimport './PostsList.scss';\n\ntype Current = (current: boolean) => boolean;\n\ntype Props = {\n  selectedUserId: number;\n  selectedPostId: number;\n  setSelectedPostId: (postId: number) => void;\n  areDetailsShown: (fn: Current) => void;\n  postDetailsAreShown: boolean;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  selectedUserId,\n  selectedPostId,\n  setSelectedPostId,\n  areDetailsShown,\n  postDetailsAreShown,\n}) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  const loadPosts = () => {\n    getPosts()\n      .then((postsFromServer: Post[]) => {\n        setPosts(postsFromServer);\n      });\n  };\n\n  const loadUserPosts = () => {\n    if (selectedUserId) {\n      getUserPosts(selectedUserId)\n        .then((postsFromServer: Post[]) => {\n          setPosts(postsFromServer);\n        });\n    }\n  };\n\n  useEffect(() => {\n    loadPosts();\n  }, []);\n\n  useEffect(() => {\n    loadUserPosts();\n  });\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n\n        {posts.map((post: Post) => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>\n                {`[User ${post.userId}}]:`}\n              </b>\n              {post.body}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                areDetailsShown(current => {\n                  if (selectedPostId !== post.id) {\n                    return true;\n                  }\n\n                  return !current;\n                });\n                setSelectedPostId(post.id);\n              }}\n            >\n              {(selectedPostId === post.id && postDetailsAreShown)\n                ? 'close'\n                : 'open'}\n            </button>\n          </li>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { createComment } from '../../api/posts';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  postId: number;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ postId }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const comment = {\n    postId,\n    name,\n    email,\n    body,\n  };\n\n  const clear = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        createComment(comment);\n        clear();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPostComments, getPostDetails, removeComment } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { Comment } from '../../types/Comment';\nimport './PostDetails.scss';\n\ntype Props = {\n  postId: number;\n};\n\nexport const PostDetails: React.FC<Props> = ({ postId }) => {\n  const [details, setDetails] = useState('');\n  const [areCommentsShown, setAreCommentsShown] = useState(true);\n  const [comments, setComments] = useState<Comment[]>([]);\n\n  const loadDetails = () => {\n    getPostDetails(postId)\n      .then(detailsFromServer => {\n        setDetails(detailsFromServer.body);\n      });\n  };\n\n  const loadComments = () => {\n    getPostComments(postId)\n      .then(commentsFromServer => {\n        setComments(commentsFromServer);\n      });\n  };\n\n  useEffect(() => {\n    loadDetails();\n  }, [postId]);\n\n  useEffect(() => {\n    loadComments();\n  }, [comments]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{details}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {!!comments.length && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => {\n              setAreCommentsShown(current => !current);\n            }}\n          >\n            {`${areCommentsShown\n              ? 'Hide'\n              : 'Show'\n            } ${comments.length\n            } comment${(comments.length === 1)\n              ? ''\n              : 's'}`}\n          </button>\n        )}\n\n        {areCommentsShown && (\n          comments.map((comment: Comment) => (\n            <ul\n              key={comment.id}\n              className=\"PostDetails__list\"\n            >\n              <li className=\"PostDetails__list-item\">\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => removeComment(`${comment.id}`)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            </ul>\n          ))\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={postId}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getUsers } from '../../api/posts';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedUserId: number;\n  setSelectedUserId: (userId: number)=> void;\n  setDetailsAreShown: (isHidden: boolean) => void;\n};\n\nexport const UserSelect: React.FC<Props> = ({\n  selectedUserId,\n  setSelectedUserId,\n  setDetailsAreShown,\n}) => {\n  const [users, setUsers] = useState([]);\n\n  const loadUsers = () => {\n    getUsers()\n      .then((usersFromServer) => {\n        setUsers(usersFromServer);\n      });\n  };\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  return (\n    <label htmlFor=\"unique-id\">\n      <span id=\"unique-id\">Select a user: &nbsp;</span>\n\n      <select\n        className=\"App__user-selector\"\n        value={selectedUserId}\n        onChange={event => {\n          setSelectedUserId(+event.target.value);\n          setDetailsAreShown(false);\n        }}\n      >\n        <option value=\"\">Select user</option>\n        {users.map((user: User) => (\n          <option\n            key={user.id}\n            value={user.id}\n          >\n            {user.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelect } from './components/UserSelect';\n\nconst App: React.FC = () => {\n  const [userId, setUserId] = useState(0);\n  const [postId, setPostId] = useState(0);\n  const [postDetailsAreShown, setDetailsAreShown] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect\n          selectedUserId={userId}\n          setSelectedUserId={setUserId}\n          setDetailsAreShown={setDetailsAreShown}\n        />\n      </header>\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUserId={userId}\n            selectedPostId={postId}\n            setSelectedPostId={setPostId}\n            areDetailsShown={setDetailsAreShown}\n            postDetailsAreShown={postDetailsAreShown}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {postDetailsAreShown\n            && (\n              <PostDetails\n                postId={postId}\n              />\n            )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}